呼叫堆疊（英語：Call stack，中國稱「調用堆棧」，英文直接簡稱為「堆疊」（the stack））別稱有：執行堆疊（execution stack）、控制堆疊（control stack）、執行時堆疊（run-time stack）與機器堆疊（machine stack），是電腦科學中儲存有關正在執行的子程式的訊息的堆疊。有時僅稱「堆疊」，但堆疊中不一定僅儲存子程式訊息。幾乎所有電腦程式都依賴於呼叫堆疊，然而高階語言一般將呼叫堆疊的細節隱藏至後台。
呼叫堆疊最經常被用於存放子程式的返回位址。在呼叫任何子程式時，主程式都必須暫存子程式執行完畢後應該返回到的位址。因此，如果被呼叫的子程式還要呼叫其他的子程式，其自身的返回位址就必須存入呼叫堆疊，在其自身執行完畢後再行取回。在遞迴程式中，每一層次遞迴都必須在呼叫堆疊上增加一條位址，因此如果程式出現無限遞迴（或僅僅是過多的遞迴層次），呼叫堆疊就會產生堆疊溢位。
呼叫堆疊的主要功能是存放返回位址。除此之外，呼叫堆疊還用於存放：
以下MIPS組合語言程式計算




3

2


+

4

2




{\displaystyle 3^{2}+4^{2}}

，並將結果存至暫存器s0。
這裡，主程式（main）呼叫「sumsq」子程式並將返回位址存入暫存器ra，但是「sumsq」子程式需要呼叫「square」子程式。為保證sumsq的返回位址不被重寫，這個位址被儲存在堆疊中。在square子程式返回後，sumsq再從堆疊中取回其自身的返回位址。
在較底層語言（如組合語言與C語言中），程式控制訊息與資料可能一同被存入呼叫堆疊中，因此造成安全隱患，可能允許惡意程式通過堆疊緩衝區溢位(stack buffer overflow)來獲取程式的控制權。
