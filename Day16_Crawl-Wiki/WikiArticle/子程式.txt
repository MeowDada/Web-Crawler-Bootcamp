在電腦科學中，子程式（德語：unterprogramm，英語：subroutine, subprogram, callable unit），是一個大型程式中的某部份程式碼，由一個或多個語句塊組成。它負責完成某項特定工作，而且相較於其他程式碼，具備相對的獨立性。
一般會有輸入參數並有傳回值，提供對程序的封裝和細節的隱藏。這些代碼通常被整合為軟體庫。
函式在程序導向的語言中已經出現。是結構（struct）和類別（class）的前身。本身就是對具有相關性語句的歸類和對某程序的抽象。
子程式是一個概括性的術語，子程式是所有高階程式所稱。它經常被使用在組合語言層級上。子程式的主體（body）是一個程式碼區塊，當它被呼叫時就會進入執行。
函式（function）是一種子程式，利用函式名稱，可以接收回傳值。例如：
程序（procedure）是一種子程式，它能夠接受不同的引數，來執行某些特別的動作。例如：
函式與程序在某些程式語言中是被分開的，但是在C語言中，所有程序都是函式，這兩者被認為是相同的。這有可能造成一些副作用，特別是在回傳值是void型別時。
在物件導向程式設計語言中，類別或物件中的子程式，被稱為方法（method）。
