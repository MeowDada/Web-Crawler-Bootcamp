在數位電路理論中，序向邏輯電路是指電路任何時刻的穩態輸出不僅取決於當前的輸入，還與前一時刻輸入形成的狀態有關。這跟組合邏輯電路相反，組合邏輯的輸出只會跟目前的輸入成一種函數關係。換句話說，時序邏輯擁有儲存元件（記憶體）來存儲信息，而組合邏輯則沒有。
從時序邏輯電路中，可以建出兩種形式的有限狀態機：
時序邏輯因此被用來建構某些形式的電腦的記憶體，延遲跟儲存單元，以及有限狀態自動機。大部分現實的電腦電路都是混用組合邏輯跟時序邏輯。







{




y

1


=

f

1


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)





y

2


=

f

2


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)




.
.
.





y

j


=

f

j


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)








{\displaystyle {\begin{cases}y_{1}=f_{1}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\\y_{2}=f_{2}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\\...\\y_{j}=f_{j}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\end{cases}}}








{




z

1


=

g

1


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)





z

2


=

g

2


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)




.
.
.





z

j


=

g

j


(

x

1


,

x

2


,
.
.
.

x

i


,

q

1


,

q

2


,
.
.
.

q

k


)








{\displaystyle {\begin{cases}z_{1}=g_{1}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\\z_{2}=g_{2}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\\...\\z_{j}=g_{j}(x_{1},x_{2},...x_{i},q_{1},q_{2},...q_{k})\end{cases}}}








{




q


1

(
n
+
1
)




=

h

1


(

z

1


,

z

2


,
.
.
.

z

k


,

q


1

(
n
)




,

q


2

(
n
)




,
.
.
.

q


k

(
n
)




)





q


2

(
n
+
1
)




=

h

2


(

z

1


,

z

2


,
.
.
.

z

k


,

q


1

(
n
)




,

q


2

(
n
)




,
.
.
.

q


k

(
n
)




)




.
.
.





q


k

(
n
+
1
)




=

h

k


(

z

1


,

z

2


,
.
.
.

z

k


,

q


1

(
n
)




,

q


2

(
n
)




,
.
.
.

q


k

(
n
)




)








{\displaystyle {\begin{cases}q_{1_{(n+1)}}=h_{1}(z_{1},z_{2},...z_{k},q_{1_{(n)}},q_{2_{(n)}},...q_{k_{(n)}})\\q_{2_{(n+1)}}=h_{2}(z_{1},z_{2},...z_{k},q_{1_{(n)}},q_{2_{(n)}},...q_{k_{(n)}})\\...\\q_{k_{(n+1)}}=h_{k}(z_{1},z_{2},...z_{k},q_{1_{(n)}},q_{2_{(n)}},...q_{k_{(n)}})\end{cases}}}


同步時序電路中所有存儲元件都在時鐘脈衝CP的統一控制下，用正反器作為存儲元件。幾乎現在所有的時序邏輯都是「同步邏輯」：有一個「時鐘」訊號，所有的內部記憶體（'內部狀態'）只會在時鐘的邊沿時候改變。在時序邏輯中最基本的儲存元件是正反器。
同步邏輯最主要的優點是它很簡單。每一個電路裡的運算必須要在時鐘的兩個脈衝之間固定的間隔內完成，稱為一個 '時鐘週期'。只有在這個條件滿足下（不考慮其他的某些細節），電路才能保證是可靠的。
同步邏輯也有兩個主要的缺點：
正反器是一種具有記憶能力、構成序向邏輯的基本單元電路。一個正反器能「存儲」一位二進位數位信息：「0」或「1」。
非同步時序邏輯是循序邏輯的普遍本質，但是由於它的彈性關係，他也是設計上困難度最高的。最基本的儲存元件是閂鎖。閂鎖可以在任何時間改變它的狀態，依照其他的閂鎖訊號的變動，他們新的狀態就會被產生出來。非同步電路的複雜度隨著邏輯閘的增加，而複雜性也快速的增加，因此他們大部分僅僅使用在小的應用。然而，電腦輔助設計工具漸漸的可以簡化這些工作，允許更複雜的設計。
也可能建造出混合的電路，包含有同步的正反器和異步的閂鎖（它們都是雙穩態元件）。
